# -------------------------------------------------------------
# 🧩 GitHub Actions Workflow for Dart Projects
# -------------------------------------------------------------
# Name: Zarinpal Extended Analytics CI
# Purpose: CI pipeline for building, analyzing and testing Dart apps
# -------------------------------------------------------------

name: "🧠 Zarinpal Extended Analytics CI"

# Run on push to main/dev, PRs, or manual dispatch
on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]
  workflow_dispatch:

# Prevent overlapping runs for same ref
concurrency:
  group: "dart-ci-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    name: "🧩 Build & Test (Dart)"
    runs-on: ubuntu-latest
    steps:
      - name: "🗂 Checkout repository"
        uses: actions/checkout@v4

      - name: "⚙️ Setup Dart SDK (stable)"
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: "🧰 Cache Pub packages"
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          # include pubspec.lock so cache invalidates properly on dependency changes
          key: ${{ runner.os }}-dart-${{ hashFiles('**/pubspec.yaml', '**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-dart-

      - name: "📦 Install dependencies"
        run: dart pub get

      - name: "🎨 Check formatting"
        # Fails the job if formatting is needed. Remove --set-exit-if-changed to only show changes.
        run: dart format --output=none --set-exit-if-changed .

      - name: "🔍 Run analyzer"
        # Consider removing --fatal-infos if you prefer warnings to not fail CI
        run: dart analyze --fatal-infos

      - name: "🧪 Run tests"
        run: dart test --reporter=expanded

      # Optional: build step for CLI apps (uncomment if you have a bin/main.dart)
      # - name: "🏗 Build executable (optional)"
      #   run: dart compile exe bin/main.dart -o build/app

      # Optional: upload test artifacts
      # - name: "📤 Upload test results (optional)"
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: test-results
      #     path: test/

      - name: "✅ CI pipeline completed"
        run: echo "✅ Dart CI completed successfully!"
